Script started on Fri 03 Nov 2017 08:48:34 AM UTC
]0;ubuntu@ip-172-31-24-59: /var/www/htmlubuntu@ip-172-31-24-59:/var/www/html$ crontab -e
[?1049h[1;24r(B[m[4l[?7h[?1h=[?1h=[?1h=[39;49m[?25l[39;49m(B[m[H[2J[22;33H(B[0;7m[ Reading File ][3d(B[m[22;32H(B[0;7m[ Read 23 lines[3d(B[m[?12l[?25h[H[39;49m(B[0;7m  GNU nano 2.5.3        File: /tmp/crontab.wQnJi7/crontab                       [3;1H(B[m# Edit this file to introduce tasks to be run by cron.[4d#[5d# Each task to run has to be defined through a single line[6d# indicating with different fields when the task will be run[7d# and what command to run for the task[8d#[9d# To define the time you can provide concrete values for[10d# minute (m), hour (h), day of month (dom), month (mon),[11d# and day of week (dow) or use '*' in these fields (for 'any').#[12d# Notice that tasks will be started based on the cron's system[13d# daemon's notion of time and timezones.[14d#[15d# Output of the crontab jobs (including errors) is sent through[16d# email to the user the crontab file belongs to (unless redirected).[17d#[18d# For example, you can run a backup of all your user accounts[19d# at 5 a.m every week with:[20d# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/[21d#[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[3d[4d[5d[6d[7d[8d[9d[10d[11d[16d[17d[18d[19d[20d[21d7[3;21r8[10S[1;24r[12;1H# For more information see the manual pages of crontab(5) and cron(8)[13d#[14d# m h  dom mon dow   command[15d* * * * * /bin/sh /var/www/html/cron.sh[12d[22d[J[24;80H[24;1H[?1049l[?1l>No modification made
]0;ubuntu@ip-172-31-24-59: /var/www/htmlubuntu@ip-172-31-24-59:/var/www/html$ date
Fri Nov  3 09:01:09 UTC 2017
]0;ubuntu@ip-172-31-24-59: /var/www/htmlubuntu@ip-172-31-24-59:/var/www/html$ datecrontab -e
[?1049h[1;24r(B[m[4l[?7h[?1h=[?1h=[?1h=[39;49m[?25l[39;49m(B[m[H[2J[22;33H(B[0;7m[ Reading File ][3d(B[m[22;32H(B[0;7m[ Read 23 lines[3d(B[m[?12l[?25h[H[39;49m(B[0;7m  GNU nano 2.5.3        File: /tmp/crontab.mxPrxp/crontab                       [3;1H(B[m# Edit this file to introduce tasks to be run by cron.[4d#[5d# Each task to run has to be defined through a single line[6d# indicating with different fields when the task will be run[7d# and what command to run for the task[8d#[9d# To define the time you can provide concrete values for[10d# minute (m), hour (h), day of month (dom), month (mon),[11d# and day of week (dow) or use '*' in these fields (for 'any').#[12d# Notice that tasks will be started based on the cron's system[13d# daemon's notion of time and timezones.[14d#[15d# Output of the crontab jobs (including errors) is sent through[16d# email to the user the crontab file belongs to (unless redirected).[17d#[18d# For example, you can run a backup of all your user accounts[19d# at 5 a.m every week with:[20d# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/[21d#[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[3d[4d[5d[6d[7d[8d[9d[12d[15d[16d[17d[18d[19d[20d[21d[20;50H[21;3H7[2;21r8[10S[1;24r[1;71H(B[0;7mModified[2d(B[m[K[13d# For more information see the manual pages of crontab(5) and cron(8)[14d#[15d# m h  dom mon dow   command[16d* * * * * /bin/sh /var/www/html/cron.sh[12d 0 [22d[K[12d 0  00 5 * * 1 rm -rf ABC /var/www/html[13d[14;3H[15;29H[16;37H.sh  on(8)[14d#[15d# m h  dom mon dow   command[16d* * * * * /bin/sh /var/www/html/cron.sh[12d 0 [22d[K[12d 0  00 5 * * 1 rm -rf ABC /var/www/html[13d[14;3H[15;29H[16;37H.sh     [K [22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[22;62H[J[24;80H[24;1H[?1049l[?1l>No modification made
]0;ubuntu@ip-172-31-24-59: /var/www/htmlubuntu@ip-172-31-24-59:/var/www/html$ crontab -e
[?1049h[1;24r(B[m[4l[?7h[?1h=[?1h=[?1h=[39;49m[?25l[39;49m(B[m[H[2J[22;33H(B[0;7m[ Reading File ][3d(B[m[22;32H(B[0;7m[ Read 23 lines[3d(B[m[?12l[?25h[H[39;49m(B[0;7m  GNU nano 2.5.3        File: /tmp/crontab.E30Blg/crontab                       [3;1H(B[m# Edit this file to introduce tasks to be run by cron.[4d#[5d# Each task to run has to be defined through a single line[6d# indicating with different fields when the task will be run[7d# and what command to run for the task[8d#[9d# To define the time you can provide concrete values for[10d# minute (m), hour (h), day of month (dom), month (mon),[11d# and day of week (dow) or use '*' in these fields (for 'any').#[12d# Notice that tasks will be started based on the cron's system[13d# daemon's notion of time and timezones.[14d#[15d# Output of the crontab jobs (including errors) is sent through[16d# email to the user the crontab file belongs to (unless redirected).[17d#[18d# For example, you can run a backup of all your user accounts[19d# at 5 a.m every week with:[20d# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/[21d#[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[17d[18d[19d[20d[21d7[3;21r8[10S[1;24r[12;1H# For more information see the manual pages of crontab(5) and cron(8)[13d#[14d# m h  dom mon dow   command[15d* * * * * /bin/sh /var/www/html/cron.sh[12d[A#[1;71H(B[0;7mModified[11d(B[m[K[11;9H [22d[K[11d  [22d(B[0;7mFile to insert [from ./] :                                                      [23;14H(B[m             (B[0;7m^X(B[m Execute Command        (B[0;7m^T(B[m To Files[K[24;2H(B[0;7mC(B[m Cancel[17X[24;27H(B[0;7mM-F(B[m New Buffer[K[22;28H[?25l[33G[1K (B[0;7m[ Cancelled ](B[m[K[11;3H[?12l[?25h[23;14H(B[0;7m^O(B[m Write Out (B[0;7m^W(B[m Where Is  (B[0;7m^K(B[m Cut Text  (B[0;7m^J(B[m Justify   (B[0;7m^C(B[m Cur Pos[24;2H(B[0;7mX(B[m Exit      (B[0;7m^R(B[m Read File (B[0;7m^\(B[m Replace   (B[0;7m^U(B[m Uncut Text(B[0;7m^T(B[m To Spell  (B[0;7m^_(B[m Go To Line[11;3H[?25l[3dMain nano help text[K[4d[K[5d The nano editor is designed to emulate the functionality and ease-of-use[6d of the UW Pico text editor.  There are four main sections of the editor.[7d The top line shows the program version, the current filename being[8d edited, and whether or not the file has been modified.  Next is the main[9d editor window showing the file being edited.  The status line is the[10d third line from the bottom and shows important messages.  The bottom two[11d lines show the most commonly used shortcuts in the editor.[12d[K[13d The notation for shortcuts is as follows: Control-key sequences are[14d notated with a caret (^) symbol and can be entered either by using the[15d Control (Ctrl) key or pressing the Escape (Esc) key twice.  Escape-key[16d sequences are notated with the Meta (M-) symbol and can be entered using[17d either the Esc, Alt, or Meta key depending on your keyboard setup.  Also,[18d pressing Esc twice and then typing a three-digit decimal number from 000